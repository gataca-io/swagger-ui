{
    "swagger": "2.0",
    "info": {
        "description": "This is the full API of the Gataca Certify Issuer component for DeID\nThis API contains all the methods exposed, both for configuration and integration",
        "title": "Gataca Certify API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Gataca",
            "url": "https://gataca.io",
            "email": "support@gataca.io"
        },
        "version": "3.1.0"
    },
    "host": "certify.gataca.io",
    "paths": {
        "/admin/v1/certificates": {
            "get": {
                "description": "Operation to recover a certificate stored by his identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificates"
                ],
                "summary": "Get All Certificates",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Certificate"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Operation to import a certificate in format PFX/P12",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificates"
                ],
                "summary": "Import Certificate",
                "parameters": [
                    {
                        "description": "certificate",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Certificate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Certificate"
                        }
                    },
                    "409": {
                        "description": "Already exist",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/certificates/:id": {
            "get": {
                "description": "Operation to recover a certificate stored by his identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificates"
                ],
                "summary": "Get Certificate by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Certificate"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Operation to update a certificate format PFX/P12",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificates"
                ],
                "summary": "Update Certificate",
                "parameters": [
                    {
                        "description": "certificate",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Certificate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Certificate"
                        }
                    },
                    "409": {
                        "description": "Already exist",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Operation to Delete a certificate by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete Certificate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/credentials": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get the credentials issued by the issuer and filtered by status.\nThe status can be PENDING, READY, VALIDATED or ACTIVE.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "Get credential list. This endpoint its paginated",
                "responses": {
                    "200": {
                        "description": "Credentials requested.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ExtendedVerifiableCredential"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Not Authorized to get credential list.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/credentials/{id}": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get the credential identified by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "Get credential by identifier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Credential Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential requested.",
                        "schema": {
                            "$ref": "#/definitions/models.ExtendedVerifiableCredential"
                        }
                    },
                    "400": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Not Authorized to get credential list.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Modify values of a concrete credential (identified by the ID).\nCurrently, is just allowed to change the status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "Update credential",
                "responses": {
                    "200": {
                        "description": "Credential updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Not Authorized to update credentials.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/credentials/{id}/issuanceRequest": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get all the credentials associated by the same issuance ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "Get all the credentials by issuance identifier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential requested.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ExtendedVerifiableCredential"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Not Authorized to get credential list.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Modify values of all the credentials matching the same issuance Id provided.\nCurrently, just allowed to change the status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "Update credential by issuance Request",
                "responses": {
                    "200": {
                        "description": "Credentials updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Not Authorized to update credentials.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Invalid requested configurations.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/issuanceConfigs": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will get all issuance configs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Configs"
                ],
                "summary": "Create the issuance config request . This endpoint supports pagination",
                "responses": {
                    "200": {
                        "description": "List of Issuance Configs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.IssuanceConfig"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will create an issuance config.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Configs"
                ],
                "summary": "Create the issuance config request .",
                "parameters": [
                    {
                        "description": "Issuance Config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Presentation response",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/issuanceConfigs/{id}": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will get the request issuance config.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Configs"
                ],
                "summary": "Retrieve a specific issuance config.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Config Id",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested Issuance Configs",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceConfig"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Issuance config doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will update an issuance config.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Configs"
                ],
                "summary": "Update the issuance config request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Config Id",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Issuance Config data",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Config updated"
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will delete an issuance config.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Configs"
                ],
                "summary": "Delete the issuance config request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Config Id",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Config deleted"
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/issuanceRequests": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get the Issuance Requests filtered by status. The status can be PENDING, READY, VALIDATED or ACTIVE.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Get the Issuance Requests filtered by status. This endpoints supports pagination.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status type",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.IssuanceRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/issuanceRequests/{id}": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get the Issuance Requests filtered by Id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Get the Issuance Requests filtered by Id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance request identifier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/issuanceRequests/{id}/credentials": {
            "patch": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will verify the credential schema, sign the credentials and update the database with the new credentials and the issuance request filled with those too.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Fill the issuance request credentials.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Request id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "list of Credentials to attach to issuance request",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Issuance Request",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/issuanceRequests/{id}/presentationRequest": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get the Presentation request for a concrete Issuance Requests.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Get the Presentation Request for a concrete Issuance Request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Request id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation request",
                        "schema": {}
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/issuanceRequests/{id}/validator": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get the Presentation response for a concrete Issuance Requests.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Get the Presentation Response for a concrete Issuance Request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Request id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation response",
                        "schema": {}
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/tir-info": {
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The endpoint will create a new entry with VC in the body for the DID in the body on the EBSI TIR\nIf the DID its not published in the EBSI TIR endpoint will fail.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trusted Issuer"
                ],
                "summary": "Insert info on the Trusted Issuer Registry",
                "parameters": [
                    {
                        "description": "TI Config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TIConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TI Config",
                        "schema": {
                            "$ref": "#/definitions/models.TIConfig"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "DID not present on the TIR",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v1/tir-info/:id": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The endpoint will recover the entry matching the did provider on the param id from the request.\nIf the DID its not published in the EBSI TIR endpoint will fail.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trusted Issuer"
                ],
                "summary": "Get info on the Trusted Issuer Registry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DID to search",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TI Config",
                        "schema": {
                            "$ref": "#/definitions/models.TIConfig"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "DID not present on the TIR",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The endpoint will update a the entry defined by the id in the param id, with the VC in the body for the DID in the body on the EBSI TIR\nIf the DID its not published in the EBSI TIR endpoint will fail.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trusted Issuer"
                ],
                "summary": "Update info on the Trusted Issuer Registry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the entry to update inside the TIR",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TI Config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TIConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TI Config update",
                        "schema": {
                            "$ref": "#/definitions/models.TIConfig"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "DID not present on the TIR",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v2/issuanceRequests/:id/credentials": {
            "patch": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will verify the credential schema, sign the credentials and update the database with the new credentials and the issuance request filled with those too.\nThe v2 introduce the validation of the context of each credential send to this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Fill the issuance request credentials.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Request id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "list of Credentials to attach to issuance request",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation response",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v2/issuanceRequests/:id/status/:status": {
            "patch": {
                "description": "Change the status of an issuance request. Currently, it's only available to reject issuance requests in status, pending and ready",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Change the status of an issuance request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value of the status to be set in the issuance request",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceRequest"
                        }
                    },
                    "400": {
                        "description": "given param is not valid",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "your requested item is not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v3/issuanceRequests/:id/credentials": {
            "patch": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The process will verify the credential schema, sign the credentials and update the database with the new credentials and the issuance request filled with those too.\nThe v3 introduce the validation of the context of each credential send to this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Fill the issuance request credentials.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance Request id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "list of Credentials to attach to issuance request",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Presentation response",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/admin/v3/issuanceRequests/:id/status/:status": {
            "patch": {
                "description": "Change the status of an issuance request. Currently, it's only available to reject issuance requests in status, pending and ready",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Change the status of an issuance request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value of the status to be set in the issuance request",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IssuanceRequest"
                        }
                    },
                    "400": {
                        "description": "given param is not valid",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "your requested item is not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/:id": {
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The endpoint will delete the credential associated with the id on the path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "Delete the credentials by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Credential Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Issuance request not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/v1/issuanceRequests": {
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Create a new issuance request from a previously defined Issuance Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Create an issuance request.",
                "parameters": [
                    {
                        "description": "Issuance Config Id",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.IssuanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PresentationRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/v1/issuanceRequests/:id": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Ossue the credentials signed, previously validated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Issue the credentials signed.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance request identifier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Issuance request not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/v1/issuanceRequests/:id/presentationRequests": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Recover a presentation request from his identifier with pending status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Recover a presentation request.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance request identifier",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PresentationRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Issuance request not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/v1/issuanceRequests/:id/presentationResponses": {
            "post": {
                "security": [
                    {
                        "Token, AppToken": []
                    }
                ],
                "description": "Fill an issuance request with the credentials requested previously defined as verifiablePresentation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issuance Requests"
                ],
                "summary": "Fill with the credentials requested.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Issuance request identifier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Presentation",
                        "name": "pr",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ValidationProcessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Issuance request not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/v1/status/:id": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The endpoint will return all the info for the credential associated with the id on the path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Recover the credentials status by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Credential Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VerifiableStatus"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Issuance request not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/v1/status/:id/status": {
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "The endpoint will return all the info for the credential associated with the group on the path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Recover the credentials status by group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VerifiableStatus"
                        }
                    },
                    "400": {
                        "description": "Invalid data send",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "403": {
                        "description": "Invalid authorization",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Issuance request not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Serverside error processing the request",
                        "schema": {
                            "$ref": "#/definitions/github_com_gataca-io_certify_models.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "big.Int": {
            "type": "object"
        },
        "controller.IssuanceRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                }
            }
        },
        "github_com_gataca-io_certify_models.ResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Some description message"
                }
            }
        },
        "models.Certificate": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "caCerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/x509.Certificate"
                    }
                },
                "certificate": {
                    "$ref": "#/definitions/x509.Certificate"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                }
            }
        },
        "models.Claim": {
            "type": "object",
            "properties": {
                "currentStatus": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "statusReason": {
                    "type": "string"
                }
            }
        },
        "models.Constraints": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Field"
                    }
                },
                "limit_disclosure": {
                    "type": "boolean"
                },
                "subject_is_holder": {
                    "$ref": "#/definitions/models.Preference"
                },
                "subject_is_issuer": {
                    "$ref": "#/definitions/models.Preference"
                }
            }
        },
        "models.CredentialRequest": {
            "type": "object",
            "properties": {
                "mandatory": {
                    "type": "boolean",
                    "example": true
                },
                "purpose": {
                    "type": "string",
                    "example": "Authentication"
                },
                "trustLevel": {
                    "type": "integer",
                    "example": 1
                },
                "type": {
                    "type": "string",
                    "example": "emailCredential"
                }
            }
        },
        "models.DataAgreement": {
            "type": "object",
            "properties": {
                "@context": {
                    "$ref": "#/definitions/models.SSIContext"
                },
                "data_holder": {
                    "type": "string"
                },
                "data_receiver": {
                    "$ref": "#/definitions/models.DataReceiver"
                },
                "data_subject": {
                    "type": "string"
                },
                "dpia": {
                    "$ref": "#/definitions/models.Dpia"
                },
                "event": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Event"
                    }
                },
                "id": {
                    "type": "string"
                },
                "personal_data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PersonalDatum"
                    }
                },
                "purposes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Purpose"
                    }
                },
                "template_id": {
                    "type": "string"
                },
                "template_version": {
                    "type": "string"
                },
                "termination_timestamp": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.DataAgreementRef": {
            "type": "object",
            "properties": {
                "dataAgreement": {
                    "$ref": "#/definitions/models.DataAgreement"
                },
                "ref": {
                    "type": "string"
                }
            }
        },
        "models.DataPolicy": {
            "type": "object",
            "properties": {
                "data_retention_period": {
                    "type": "integer"
                },
                "geographic_restriction": {
                    "type": "string"
                },
                "industry_scope": {
                    "type": "string"
                },
                "jurisdictions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policy_URL": {
                    "type": "string"
                },
                "storage_location": {
                    "type": "string"
                }
            }
        },
        "models.DataReceiver": {
            "type": "object",
            "properties": {
                "consent_duration": {
                    "type": "integer"
                },
                "form_of_consent": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Dpia": {
            "type": "object",
            "properties": {
                "dpia_date": {
                    "type": "string"
                },
                "dpia_summary_url": {
                    "type": "string"
                }
            }
        },
        "models.EBSIClaims": {
            "type": "object",
            "properties": {
                "encryption_key": {
                    "$ref": "#/definitions/models.JWK"
                },
                "id_token": {
                    "$ref": "#/definitions/models.IdToken"
                },
                "verified_claims": {
                    "type": "string"
                },
                "vp_token": {
                    "$ref": "#/definitions/models.VpToken"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "principle_did": {
                    "type": "string"
                },
                "proof": {
                    "$ref": "#/definitions/models.SSIProof"
                },
                "state": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.ExtendedVerifiableCredential": {
            "type": "object",
            "properties": {
                "coreModels.VerifiableCredential": {},
                "createdAt": {
                    "type": "string",
                    "example": "27-11-2020T12:45:23"
                },
                "group": {
                    "type": "string",
                    "example": "university-1"
                },
                "issuanceRequest": {
                    "$ref": "#/definitions/models.IssuanceRequest"
                },
                "status": {
                    "type": "string",
                    "example": "ISSUED"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "06-12-2020T17:22:06"
                },
                "vcFormat": {
                    "$ref": "#/definitions/models.VCFormat"
                }
            }
        },
        "models.Field": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/models.Filter"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "predicate": {
                    "$ref": "#/definitions/models.Preference"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "models.Filter": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "const": {},
                "enum": {
                    "type": "array",
                    "items": {}
                },
                "exclusiveMaximum": {},
                "exclusiveMinimum": {},
                "format": {
                    "type": "string"
                },
                "maxLength": {
                    "type": "integer"
                },
                "maximum": {},
                "minLength": {
                    "type": "integer"
                },
                "minimum": {},
                "not": {
                    "$ref": "#/definitions/models.Filter"
                },
                "pattern": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Format": {
            "type": "object",
            "properties": {
                "jwt": {
                    "$ref": "#/definitions/models.JWTType"
                },
                "jwt_vc": {
                    "$ref": "#/definitions/models.JWTType"
                },
                "jwt_vp": {
                    "$ref": "#/definitions/models.JWTType"
                },
                "ldp": {
                    "$ref": "#/definitions/models.LDPType"
                },
                "ldp_vc": {
                    "$ref": "#/definitions/models.LDPType"
                },
                "ldp_vp": {
                    "$ref": "#/definitions/models.LDPType"
                }
            }
        },
        "models.IdToken": {
            "type": "object",
            "properties": {
                "acr": {},
                "verifiable_presentations": {
                    "type": "object",
                    "properties": {
                        "presentation_definition": {
                            "$ref": "#/definitions/models.PresentationDefinition"
                        }
                    }
                }
            }
        },
        "models.InputDescriptor": {
            "type": "object",
            "required": [
                "id",
                "schema"
            ],
            "properties": {
                "constraints": {
                    "$ref": "#/definitions/models.Constraints"
                },
                "group": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "schema": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/models.Schema"
                    }
                }
            }
        },
        "models.IssuanceConfig": {
            "type": "object",
            "properties": {
                "credentialGroup": {
                    "type": "string"
                },
                "credentialTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "eidasSignature": {
                    "type": "boolean"
                },
                "evidence": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "expirationTime": {
                    "type": "integer"
                },
                "feedbackHook": {
                    "type": "string"
                },
                "feedbackMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pollingFrequency": {
                    "type": "integer"
                },
                "pollingMaxTime": {
                    "type": "integer"
                },
                "prConfig": {
                    "$ref": "#/definitions/models.PrConfig"
                },
                "sendNotification": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "validFrom": {
                    "type": "string"
                },
                "validationHook": {
                    "type": "string"
                }
            }
        },
        "models.IssuanceRequest": {
            "type": "object",
            "properties": {
                "auth_request": {
                    "$ref": "#/definitions/models.JWTEBSIClaims"
                },
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {}
                },
                "expiredAt": {
                    "$ref": "#/definitions/pq.NullTime"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "presentationRequest": {
                    "$ref": "#/definitions/models.PresentationRequest"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "validator": {
                    "$ref": "#/definitions/models.PresentationResponse"
                }
            }
        },
        "models.JWK": {
            "type": "object",
            "properties": {
                "alg": {
                    "type": "string",
                    "example": "jwa values: https://www.rfc-editor.org/rfc/rfc7518.html#page-6"
                },
                "crv": {
                    "type": "string"
                },
                "d": {
                    "type": "string"
                },
                "dp": {
                    "type": "string"
                },
                "dq": {
                    "type": "string"
                },
                "e": {
                    "type": "string"
                },
                "k": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "n": {
                    "type": "string"
                },
                "p": {
                    "type": "string"
                },
                "q": {
                    "type": "string"
                },
                "qi": {
                    "type": "string"
                },
                "use": {
                    "type": "string",
                    "example": "sig,enc"
                },
                "x": {
                    "type": "string"
                },
                "y": {
                    "type": "string"
                }
            }
        },
        "models.JWTEBSIClaims": {
            "type": "object",
            "properties": {
                "aud": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "claims": {
                    "$ref": "#/definitions/models.EBSIClaims"
                },
                "client_id": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer"
                },
                "iat": {
                    "type": "integer"
                },
                "iss": {
                    "type": "string"
                },
                "jti": {
                    "type": "string"
                },
                "nbf": {
                    "type": "integer"
                },
                "nonce": {
                    "type": "string"
                },
                "redirect_uri": {
                    "type": "string"
                },
                "registration": {
                    "type": "string"
                },
                "response_mode": {
                    "type": "string"
                },
                "response_type": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                },
                "sub_did_verification_method_uri": {
                    "type": "string"
                },
                "sub_jwk": {
                    "$ref": "#/definitions/models.JWK"
                },
                "vc": {},
                "vp": {}
            }
        },
        "models.JWTType": {
            "type": "object",
            "required": [
                "alg"
            ],
            "properties": {
                "alg": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.LDPType": {
            "type": "object",
            "required": [
                "proof_type"
            ],
            "properties": {
                "proof_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.LDPVerifiableCredential": {
            "type": "object",
            "properties": {
                "@context": {
                    "$ref": "#/definitions/models.SSIContext"
                },
                "credentialSchema": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "credentialStatus": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "evidence": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "example": "2019-10-01T12:12:15.999Z"
                },
                "id": {
                    "type": "string",
                    "example": "cred:gatc:2798d86b-21ce-4794-a06a-275d12b43e48"
                },
                "issuanceDate": {
                    "type": "string",
                    "example": "2019-10-01T12:12:05.999Z"
                },
                "issued": {
                    "type": "string",
                    "example": "2019-10-01T12:12:05.999Z"
                },
                "issuer": {
                    "type": "string",
                    "example": "did:gatc:OWM3MzQ1NzYzZilliM2Q2MTg5NGYwNTQ3"
                },
                "proof": {
                    "$ref": "#/definitions/models.SSIProof"
                },
                "type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "emailCredential"
                    ]
                },
                "validFrom": {
                    "type": "string",
                    "example": "2019-10-01T12:12:05.999Z"
                }
            }
        },
        "models.MechanismId": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "AuthNFactor",
                "AppAuth",
                "Credential"
            ]
        },
        "models.PersonalDatum": {
            "type": "object",
            "properties": {
                "attribute_id": {
                    "type": "string"
                },
                "attribute_location": {
                    "type": "string"
                },
                "attribute_name": {
                    "type": "string"
                },
                "attribute_sensitive": {
                    "type": "boolean"
                },
                "purposes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.PrConfig": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "type": "string"
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CredentialRequest"
                    }
                },
                "domain": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "security": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecMechanism"
                    }
                },
                "sessionTTL": {
                    "type": "integer"
                },
                "vmethodId": {
                    "type": "string"
                }
            }
        },
        "models.Preference": {
            "type": "string",
            "enum": [
                "required",
                "preferred"
            ],
            "x-enum-varnames": [
                "Required",
                "Preferred"
            ]
        },
        "models.PresentationDefinition": {
            "type": "object",
            "required": [
                "id",
                "input_descriptors"
            ],
            "properties": {
                "dataAgreement": {
                    "$ref": "#/definitions/models.DataAgreementRef"
                },
                "format": {
                    "$ref": "#/definitions/models.Format"
                },
                "id": {
                    "type": "string"
                },
                "input_descriptors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InputDescriptor"
                    }
                },
                "locale": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "proof": {
                    "$ref": "#/definitions/models.SSIProof"
                },
                "purpose": {
                    "type": "string"
                },
                "submission_requirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubmissionRequirement"
                    }
                }
            }
        },
        "models.PresentationRequest": {
            "type": "object",
            "properties": {
                "additionalData": {},
                "auth": {
                    "description": "String to represent a concrete client",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecMechanism"
                    }
                },
                "callback": {
                    "description": "For retro-comp",
                    "type": "string",
                    "example": "https://connect.gataca.io:9090"
                },
                "id": {
                    "type": "string",
                    "example": "pres:gatc:AzUcl2VkM1hSO7tmYjuisGpsjCbeiDrG"
                },
                "nonce": {
                    "type": "string",
                    "example": "AzUcl2VkM1hSO7tmYjuisGpsjCbeiDrG"
                },
                "proof": {
                    "$ref": "#/definitions/models.SSIProof"
                },
                "redirect_uri": {
                    "type": "string"
                },
                "requested": {
                    "description": "Session identifier",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CredentialRequest"
                    }
                }
            }
        },
        "models.PresentationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "pres:gatc:AzUcl2VkM1hSO7tmYjuisGpsjCbeiDrG"
                },
                "securityMechanisms": {
                    "description": "Assuming always ldp_vp because this is v1 Gatc and will be deprecated"
                },
                "verifiablePresentation": {}
            }
        },
        "models.Proof": {
            "type": "object",
            "properties": {
                "@context": {
                    "$ref": "#/definitions/models.SSIContext"
                },
                "cades": {
                    "type": "string",
                    "example": "308204c906092a864886f70d010702...266ad9fee3375d8095"
                },
                "challenge": {
                    "type": "string",
                    "example": "TyYfomXjwPaQoSRzCZk7CxFYR8DwAigt"
                },
                "created": {
                    "type": "string",
                    "example": "2019-10-01T12:12:05.999Z"
                },
                "creator": {
                    "type": "string",
                    "example": "did:gatc:yyyyyyyyyyyy#keys-1"
                },
                "domain": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string",
                    "example": "TyYfomXjwPaQoSRzCZk7CxFYR8DwAigt"
                },
                "proofPurpose": {
                    "type": "string",
                    "example": "Authentication"
                },
                "proofValue": {
                    "type": "string",
                    "example": "bQ5AimlvOv6p5wa9pVlmjWgPMr7j9rKw_yjUL6yHlQNwnKk7HL8VQzIT0Xx"
                },
                "signatureValue": {
                    "type": "string",
                    "example": "bQ5AimlvOv6p5wa9pVlmjWgPMr7j9rKw_yjUL6yHlQNwnKk7HL8VQzIT0Xx"
                },
                "type": {
                    "type": "string",
                    "example": "Ed25519Signature2018"
                },
                "verificationMethod": {
                    "type": "string",
                    "example": "did:gatc:yyyyyyyyyyyy#keys-1"
                }
            }
        },
        "models.Purpose": {
            "type": "object",
            "properties": {
                "data_policy": {
                    "$ref": "#/definitions/models.DataPolicy"
                },
                "id": {
                    "type": "string"
                },
                "legal_basis": {
                    "type": "string"
                },
                "method_of_use": {
                    "type": "string"
                },
                "purpose_category": {
                    "type": "string"
                },
                "purpose_description": {
                    "type": "string"
                }
            }
        },
        "models.SSIContext": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "string"
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.SSIProof": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/models.Proof"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Proof"
                    }
                }
            }
        },
        "models.Schema": {
            "type": "object",
            "properties": {
                "required": {
                    "type": "boolean"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "models.SecMechanism": {
            "type": "object",
            "properties": {
                "accepted": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/models.MechanismId"
                }
            }
        },
        "models.Selection": {
            "type": "string",
            "enum": [
                "all",
                "pick"
            ],
            "x-enum-varnames": [
                "All",
                "Pick"
            ]
        },
        "models.SubmissionRequirement": {
            "type": "object",
            "required": [
                "rule"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 1
                },
                "from": {
                    "type": "string"
                },
                "from_nested": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SubmissionRequirement"
                    }
                },
                "max": {
                    "type": "integer"
                },
                "min": {
                    "description": "Can be zero",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "rule": {
                    "$ref": "#/definitions/models.Selection"
                }
            }
        },
        "models.TIConfig": {
            "type": "object",
            "properties": {
                "did": {
                    "type": "string"
                },
                "resultingHash": {
                    "type": "string"
                },
                "vc": {
                    "$ref": "#/definitions/models.LDPVerifiableCredential"
                }
            }
        },
        "models.VCFormat": {
            "type": "string",
            "enum": [
                "ldp_vc",
                "jwt_vc"
            ],
            "x-enum-varnames": [
                "VCLDP",
                "VCJWT"
            ]
        },
        "models.ValidationProcessResponse": {
            "type": "object",
            "properties": {
                "feedbackHook": {
                    "type": "string"
                },
                "feedbackMessage": {
                    "type": "string"
                },
                "pollingFrequency": {
                    "description": "seconds",
                    "type": "integer"
                },
                "pollingMaxTime": {
                    "description": "seconds",
                    "type": "string"
                },
                "token": {
                    "description": "JWT",
                    "type": "string"
                }
            }
        },
        "models.VerifiableCredentialStatus": {
            "type": "object",
            "properties": {
                "claim": {
                    "$ref": "#/definitions/models.Claim"
                },
                "issued": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "proof": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "models.VerifiableStatus": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issued": {
                    "type": "string"
                },
                "verifiableCredential": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VerifiableCredentialStatus"
                    }
                }
            }
        },
        "models.VpToken": {
            "type": "object",
            "properties": {
                "presentation_definition": {
                    "$ref": "#/definitions/models.PresentationDefinition"
                }
            }
        },
        "net.IPNet": {
            "type": "object",
            "properties": {
                "ip": {
                    "description": "network number",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mask": {
                    "description": "network mask",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkix.AttributeTypeAndValue": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {}
            }
        },
        "pkix.Extension": {
            "type": "object",
            "properties": {
                "critical": {
                    "type": "boolean"
                },
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkix.Name": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extraNames": {
                    "description": "ExtraNames contains attributes to be copied, raw, into any marshaled\ndistinguished names. Values override any attributes with the same OID.\nThe ExtraNames field is not populated when parsing, see Names.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.AttributeTypeAndValue"
                    }
                },
                "locality": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "names": {
                    "description": "Names contains all parsed attributes. When parsing distinguished names,\nthis can be used to extract non-standard attributes that are not parsed\nby this package. When marshaling to RDNSequences, the Names field is\nignored, see ExtraNames.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.AttributeTypeAndValue"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pq.NullTime": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "url.URL": {
            "type": "object",
            "properties": {
                "forceQuery": {
                    "description": "append a query ('?') even if RawQuery is empty",
                    "type": "boolean"
                },
                "fragment": {
                    "description": "fragment for references, without '#'",
                    "type": "string"
                },
                "host": {
                    "description": "host or host:port",
                    "type": "string"
                },
                "opaque": {
                    "description": "encoded opaque data",
                    "type": "string"
                },
                "path": {
                    "description": "path (relative paths may omit leading slash)",
                    "type": "string"
                },
                "rawFragment": {
                    "description": "encoded fragment hint (see EscapedFragment method)",
                    "type": "string"
                },
                "rawPath": {
                    "description": "encoded path hint (see EscapedPath method)",
                    "type": "string"
                },
                "rawQuery": {
                    "description": "encoded query values, without '?'",
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "user": {
                    "description": "username and password information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/url.Userinfo"
                        }
                    ]
                }
            }
        },
        "url.Userinfo": {
            "type": "object"
        },
        "x509.Certificate": {
            "type": "object",
            "properties": {
                "authorityKeyId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "basicConstraintsValid": {
                    "description": "BasicConstraintsValid indicates whether IsCA, MaxPathLen,\nand MaxPathLenZero are valid.",
                    "type": "boolean"
                },
                "crldistributionPoints": {
                    "description": "CRL Distribution Points",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dnsnames": {
                    "description": "Subject Alternate Name values. (Note that these values may not be valid\nif invalid values were contained within a parsed certificate. For\nexample, an element of DNSNames may not be a valid DNS domain name.)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedDNSDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludedIPRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "excludedURIDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extKeyUsage": {
                    "description": "Sequence of extended key usages.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "extensions": {
                    "description": "Extensions contains raw X.509 extensions. When parsing certificates,\nthis can be used to extract non-critical extensions that are not\nparsed by this package. When marshaling certificates, the Extensions\nfield is ignored, see ExtraExtensions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.Extension"
                    }
                },
                "extraExtensions": {
                    "description": "ExtraExtensions contains extensions to be copied, raw, into any\nmarshaled certificates. Values override any extensions that would\notherwise be produced based on the other fields. The ExtraExtensions\nfield is not populated when parsing certificates, see Extensions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkix.Extension"
                    }
                },
                "ipaddresses": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "isCA": {
                    "type": "boolean"
                },
                "issuer": {
                    "$ref": "#/definitions/pkix.Name"
                },
                "issuingCertificateURL": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyUsage": {
                    "type": "integer"
                },
                "maxPathLen": {
                    "description": "MaxPathLen and MaxPathLenZero indicate the presence and\nvalue of the BasicConstraints' \"pathLenConstraint\".\n\nWhen parsing a certificate, a positive non-zero MaxPathLen\nmeans that the field was specified, -1 means it was unset,\nand MaxPathLenZero being true mean that the field was\nexplicitly set to zero. The case of MaxPathLen==0 with MaxPathLenZero==false\nshould be treated equivalent to -1 (unset).\n\nWhen generating a certificate, an unset pathLenConstraint\ncan be requested with either MaxPathLen == -1 or using the\nzero value for both MaxPathLen and MaxPathLenZero.",
                    "type": "integer"
                },
                "maxPathLenZero": {
                    "description": "MaxPathLenZero indicates that BasicConstraintsValid==true\nand MaxPathLen==0 should be interpreted as an actual\nmaximum path length of zero. Otherwise, that combination is\ninterpreted as MaxPathLen not being set.",
                    "type": "boolean"
                },
                "notBefore": {
                    "description": "Validity bounds.",
                    "type": "string"
                },
                "ocspserver": {
                    "description": "RFC 5280, 4.2.2.1 (Authority Information Access)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedDNSDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedDNSDomainsCritical": {
                    "description": "Name constraints",
                    "type": "boolean"
                },
                "permittedEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permittedIPRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/net.IPNet"
                    }
                },
                "permittedURIDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policyIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "publicKey": {},
                "publicKeyAlgorithm": {
                    "type": "integer"
                },
                "raw": {
                    "description": "Complete ASN.1 DER content (certificate, signature algorithm and signature).",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawIssuer": {
                    "description": "DER encoded Issuer",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawSubject": {
                    "description": "DER encoded Subject",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawSubjectPublicKeyInfo": {
                    "description": "DER encoded SubjectPublicKeyInfo.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rawTBSCertificate": {
                    "description": "Certificate part of raw ASN.1 DER content.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "$ref": "#/definitions/big.Int"
                },
                "signature": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "signatureAlgorithm": {
                    "type": "integer"
                },
                "subject": {
                    "$ref": "#/definitions/pkix.Name"
                },
                "subjectKeyId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "unhandledCriticalExtensions": {
                    "description": "UnhandledCriticalExtensions contains a list of extension IDs that\nwere not (fully) processed when parsing. Verify will fail if this\nslice is non-empty, unless verification is delegated to an OS\nlibrary which understands all the critical extensions.\n\nUsers can access these extensions using Extensions and can remove\nelements from this slice if they believe that they have been\nhandled.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "unknownExtKeyUsage": {
                    "description": "Encountered extended key usages unknown to this package.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "uris": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/url.URL"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "API to manage Certificates",
            "name": "Certificates"
        },
        {
            "description": "API to manage Credentials",
            "name": "Credentials"
        },
        {
            "description": "API to manage Issuance Configs",
            "name": "Issuance Configs"
        },
        {
            "description": "API to manage Issuance Requests",
            "name": "Issuance Requests"
        },
        {
            "description": "API to manage Status",
            "name": "Status"
        },
        {
            "description": "API to manage Trusted Issuer",
            "name": "Trusted Issuer"
        }
    ]
}